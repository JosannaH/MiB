/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

// TODO Lägg till fler val vid registrering beroende på ras. Tex antal armar för Squid
// TODO sätt alienID automatiskt -> räkna uppåt från senaste inlagda (Rosa har nummer 4)

package mib;

import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author luna
 */
public class UppdateraAlien extends javax.swing.JFrame {

    // används till konstruktorn
    private InfDB idb;
    private String anvId;
    private String anvTyp;
    private String regAlienID;
    ArrayList<String> squidLista;
    ArrayList<String> bogloditeLista;
    ArrayList<String> wormLista;

    /**
     * Creates new form RegistreraAlien
     */
    public UppdateraAlien() {
        initComponents();
    }

    // kontruktor som tar in information som bland annat används till den översta MenuBar
    public UppdateraAlien(InfDB idb, String anvId, String anvTyp) {
        initComponents();
        this.idb = idb;
        this.anvId = anvId;
        this.anvTyp = anvTyp;
        SQL s = new SQL(idb);
        s.plats(cmbPlats);
        s.agent(cmbAnsAgent);
        s.omraden(cmbOmrade);
        doljText(txtRasInfo);
        doljLabel(lblRasInfo);
        
        try{
            squidLista = idb.fetchColumn("SELECT Alien_ID FROM squid ORDER BY Alien_ID");
            bogloditeLista = idb.fetchColumn("SELECT Alien_ID FROM boglodite ORDER BY Alien_ID");
            wormLista = idb.fetchColumn("SELECT Alien_ID FROM worm ORDER BY Alien_ID");
        }
        catch (InfException e) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + e.getMessage());
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitel = new javax.swing.JLabel();
        txtNamn = new javax.swing.JTextField();
        lblNamn = new javax.swing.JLabel();
        txtTelefon = new javax.swing.JTextField();
        lblTelefon = new javax.swing.JLabel();
        lblRas = new javax.swing.JLabel();
        cmbRas = new javax.swing.JComboBox<>();
        lblPlats = new javax.swing.JLabel();
        lblConfirm = new javax.swing.JLabel();
        cmbAnsAgent = new javax.swing.JComboBox<>();
        lblAnsvarigAgent = new javax.swing.JLabel();
        lblLosen = new javax.swing.JLabel();
        pswLosen = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        cmbPlats = new javax.swing.JComboBox<>();
        lblPersInfo = new javax.swing.JLabel();
        lblAlienID = new javax.swing.JLabel();
        txtRasInfo = new javax.swing.JTextField();
        lblRasInfo = new javax.swing.JLabel();
        btnValjRas = new javax.swing.JToggleButton();
        txtAlienID = new javax.swing.JTextField();
        lblOmrade = new javax.swing.JLabel();
        btnSok = new javax.swing.JToggleButton();
        btnSpara = new javax.swing.JToggleButton();
        cmbOmrade = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnTillbaka = new javax.swing.JToggleButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuBarStartsida = new javax.swing.JMenu();
        menuBarInget = new javax.swing.JMenu();
        menuBarInlogg = new javax.swing.JMenu();
        menuBarLoggaUt = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblTitel.setText("Uppdatera alien");

        lblNamn.setText("Namn");

        lblTelefon.setText("Telefon");

        lblRas.setText("Ras");

        cmbRas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boglodite", "Squid", "Worm", "Ingen" }));
        cmbRas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbRasActionPerformed(evt);
            }
        });

        lblPlats.setText("Plats");

        lblConfirm.setForeground(new java.awt.Color(0, 204, 0));

        lblAnsvarigAgent.setText("Ansvarig agent");

        lblLosen.setText("Lösenord");

        pswLosen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pswLosenActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Hiragino Maru Gothic ProN", 0, 24)); // NOI18N
        jLabel7.setText("MiB REGISTRERINGSSERVICE");

        lblAlienID.setText("AlienID");

        txtRasInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRasInfoActionPerformed(evt);
            }
        });

        lblRasInfo.setText("Rasinfo");

        btnValjRas.setText("Välj ras");
        btnValjRas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnValjRasMouseClicked(evt);
            }
        });
        btnValjRas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValjRasActionPerformed(evt);
            }
        });

        lblOmrade.setText("Område");

        btnSok.setText("Sök");
        btnSok.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSokMouseClicked(evt);
            }
        });

        btnSpara.setText("Spara ändringar");
        btnSpara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSparaActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Media/UppdateraAlien.png"))); // NOI18N

        btnTillbaka.setText("Gå tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        menuBarStartsida.setText("Gå till startsida");
        menuBarStartsida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuBarStartsidaMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuBarStartsida);

        menuBarInget.setText("                                                                                                                             ");
        jMenuBar1.add(menuBarInget);

        menuBarInlogg.setText("Inloggad som Agent");
        jMenuBar1.add(menuBarInlogg);

        menuBarLoggaUt.setText("Logga ut");
        menuBarLoggaUt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuBarLoggaUtMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuBarLoggaUt);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblConfirm)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblOmrade)
                                    .addComponent(lblTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNamn)
                                    .addComponent(lblAlienID)
                                    .addComponent(lblRas, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblRasInfo)
                                    .addComponent(lblPlats)
                                    .addComponent(lblAnsvarigAgent)
                                    .addComponent(lblLosen))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pswLosen, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtAlienID, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnSok))
                                    .addComponent(cmbOmrade, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtRasInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnValjRas)
                                    .addComponent(cmbRas, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSpara)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(cmbAnsAgent, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cmbPlats, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(90, 90, 90))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPersInfo)
                                    .addComponent(btnTillbaka))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 346, Short.MAX_VALUE)))
                        .addComponent(jLabel1)
                        .addGap(56, 56, 56))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(295, 295, 295)
                        .addComponent(lblTitel)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTitel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtAlienID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSok))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pswLosen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblLosen))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTelefon))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmbOmrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblOmrade))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmbPlats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPlats))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmbAnsAgent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblAnsvarigAgent))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmbRas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblRas))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnValjRas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtRasInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblRasInfo))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSpara)))
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(lblPersInfo)
                        .addGap(13, 13, 13)
                        .addComponent(lblAlienID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTillbaka)))
                .addComponent(lblConfirm)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void doljText(JTextField textAttDolja){
        textAttDolja.setVisible(false);
    }
    
    private void doljLabel(JLabel labelAttDolja){
        labelAttDolja.setVisible(false);
    }
    
    
    private void pswLosenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pswLosenActionPerformed

    }//GEN-LAST:event_pswLosenActionPerformed

    private void txtRasInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRasInfoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRasInfoActionPerformed

    private void btnValjRasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValjRasActionPerformed
            // TODO add your handling code here:
    }//GEN-LAST:event_btnValjRasActionPerformed

    private void btnValjRasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnValjRasMouseClicked
        String ras = cmbRas.getSelectedItem().toString();
        
        if(ras.equals("Boglodite")){
            txtRasInfo.setVisible(true);
            lblRasInfo.setVisible(true);
            lblRasInfo.setText("Antal Boogies");
            txtRasInfo.setText("");
            
        }
        else if(ras.equals("Squid")){
            txtRasInfo.setVisible(true);
            lblRasInfo.setVisible(true);
            lblRasInfo.setText("Antal Armar");
            txtRasInfo.setText("");
        }
        else{
            doljText(txtRasInfo);
            doljLabel(lblRasInfo);
        }
    }//GEN-LAST:event_btnValjRasMouseClicked

    private void cmbRasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbRasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbRasActionPerformed

    private void btnSokMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSokMouseClicked
        if(Validering.textFaltHarVarde(txtAlienID)){
            String idText = txtAlienID.getText();
                        
            try{
                txtAlienID.setText(idText);
                
                String losen = idb.fetchSingle("SELECT Losenord FROM alien WHERE Alien_ID ='" + idText + "'");
                pswLosen.setText(losen);
                
                String namn = idb.fetchSingle("SELECT Namn FROM alien WHERE Alien_ID ='" + idText + "'");
                txtNamn.setText(namn);
                
                String telefon = idb.fetchSingle("SELECT Telefon FROM alien WHERE Alien_ID ='" + idText + "'");
                txtTelefon.setText(telefon);
                                             
                String platsID = idb.fetchSingle("SELECT Plats FROM alien WHERE Alien_ID ='" + idText + "'");
                String platsNamn = idb.fetchSingle("SELECT Benamning FROM plats WHERE Plats_ID ='" + platsID + "'");
                cmbPlats.setSelectedItem(platsNamn);
                
                String omrade = idb.fetchSingle("SELECT Finns_I FROM plats WHERE Plats_ID ='" + platsID + "'");
                String omradesNamn = idb.fetchSingle("SELECT Benamning FROM omrade WHERE Omrades_ID ='" + omrade + "'");
                cmbOmrade.setSelectedItem(omradesNamn);
                
                String agent = idb.fetchSingle("SELECT Ansvarig_Agent FROM alien WHERE Alien_ID ='" + idText + "'");
                String agentNamn = idb.fetchSingle("SELECT Namn FROM agent WHERE Agent_ID ='" + agent + "'");
                cmbAnsAgent.setSelectedItem(agentNamn);            
                            
                if(squidLista.contains(idText)){
                    cmbRas.setSelectedItem("Squid");
                    
                    String antalArmar = idb.fetchSingle("SELECT Antal_Armar FROM squid WHERE Alien_ID = '" + idText + "'");
                    txtRasInfo.setText(antalArmar);
                    txtRasInfo.setVisible(true);
                                        
                    lblRasInfo.setVisible(true);
                    lblRasInfo.setText("Antal Armar");
                }
                else if(bogloditeLista.contains(idText)){
                    cmbRas.setSelectedItem("Boglodite");
                    
                    String antalBoogies = idb.fetchSingle("SELECT Antal_Boogies FROM boglodite WHERE Alien_ID = '" + idText + "'");
                    txtRasInfo.setText(antalBoogies);
                    txtRasInfo.setVisible(true);
                    
                    lblRasInfo.setVisible(true);
                    lblRasInfo.setText("Antal Boogies");
                }
                else if(wormLista.contains(idText)){
                    cmbRas.setSelectedItem("Worm");
                }
                else{
                    cmbRas.setSelectedItem("Ingen");
                }
                
                
            }
            catch (InfException e) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + e.getMessage()); 
        }
        }
        else {
            JOptionPane.showMessageDialog(null, "AgentID måste vara ifyllt!");
        }
    }//GEN-LAST:event_btnSokMouseClicked

    private void btnSparaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSparaActionPerformed
        if (Validering.textFaltHarVarde(txtAlienID) && Validering.passwordHarVarde(pswLosen) && Validering.textFaltHarVarde(txtNamn)) {

            String idText = txtAlienID.getText();
            String regRas = cmbRas.getSelectedItem().toString();
            String rasInfo = txtRasInfo.getText();

            try {

                if (regRas.equals("Boglodite") && Validering.textFaltHarVarde(txtRasInfo)) {
                    uppdatera();

                    if (bogloditeLista.contains(idText)) {
                        //Funkar                        
                        idb.update("UPDATE Boglodite SET Antal_Boogies = '" + rasInfo + "' WHERE Alien_ID = '" + idText + "'");
                    } else {
                        //Funkar
                        idb.insert("INSERT INTO Boglodite VALUES ('" + idText + "', '" + rasInfo + "')");
                        //Om man ändrar från en tidigare ras behöver man ta bort info om tidigare ras... 
                        if (squidLista.contains(idText)) {
                            idb.delete("DELETE FROM Squid WHERE Alien_ID = '" + idText + "'");
                        }
                        if (wormLista.contains(idText)) {
                            idb.delete("DELETE FROM Worm WHERE Alien_ID = '" + idText + "'");
                        }
                    }

                } else if (regRas.equals("Squid") && Validering.textFaltHarVarde(txtRasInfo)) {
                    uppdatera();

                    if (squidLista.contains(idText)) {
                        idb.update("UPDATE Squid SET Antal_Armar = '" + rasInfo + "' WHERE Alien_ID = '" + idText + "'");
                    } else {
                        idb.insert("INSERT INTO Squid VALUES ('" + idText + "', '" + rasInfo + "')");
                        if (bogloditeLista.contains(idText)) {
                            idb.delete("DELETE FROM Boglodite WHERE Alien_ID = '" + idText + "'");
                        }
                        if (wormLista.contains(idText)) {
                            idb.delete("DELETE FROM Worm WHERE Alien_ID = '" + idText + "'");
                        }
                    }
                } else if (regRas.equals("Worm")) {
                    uppdatera();

                    if (wormLista.contains(idText)) {
                        idb.update("UPDATE Worm SET Antal_Armar = '" + rasInfo + "' WHERE Alien_ID = '" + idText + "'");
                    } else {
                        idb.insert("INSERT INTO Worm VALUES ('" + idText + "')");

                        if (bogloditeLista.contains(idText)) {
                            idb.delete("DELETE FROM Boglodite WHERE Alien_ID = '" + idText + "'");
                        }
                        if (squidLista.contains(idText)) {
                            idb.delete("DELETE FROM Squid WHERE Alien_ID = '" + idText + "'");
                        }
                    }
                } else if (regRas.equals("Ingen")) {
                    uppdatera();

                    if (bogloditeLista.contains(idText)) {
                        idb.delete("DELETE FROM Boglodite WHERE Alien_ID = '" + idText + "'");
                    }

                    if (squidLista.contains(idText)) {
                        idb.delete("DELETE FROM Squid WHERE Alien_ID = '" + idText + "'");
                    }
                    if (wormLista.contains(idText)) {
                        idb.delete("DELETE FROM Worm WHERE Alien_ID = '" + idText + "'");
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Alla fält måste vara ifyllda!");
                }

                JOptionPane.showMessageDialog(null, "Uppdateringen lyckades!");

            } catch (InfException e) {
                JOptionPane.showMessageDialog(null, "Något gick fel!");
                System.out.println("Internt felmeddelande" + e.getMessage());
            }

        } else {
            JOptionPane.showMessageDialog(null, "Alla fält måste vara ifyllda!");
        }


    }//GEN-LAST:event_btnSparaActionPerformed

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        setVisible(false);
        HanteraAliens hanteraAliens = new HanteraAliens(idb, anvId, anvTyp);
        hanteraAliens.setVisible(true);
    }//GEN-LAST:event_btnTillbakaActionPerformed

    private void menuBarStartsidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuBarStartsidaMouseClicked
        setVisible(false);
        StartsidaAgent startsidaAgent = new StartsidaAgent(idb, anvId, anvTyp);
        startsidaAgent.setVisible(true);
    }//GEN-LAST:event_menuBarStartsidaMouseClicked

    private void menuBarLoggaUtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuBarLoggaUtMouseClicked
        setVisible(false);
        Inloggning inlogg = new Inloggning(idb);
        inlogg.setVisible(true);
    }//GEN-LAST:event_menuBarLoggaUtMouseClicked

    private void uppdatera() {
        String idText = txtAlienID.getText();

        String regLosenord = pswLosen.getText();
        String regNamn = txtNamn.getText();
        String regTelefon = txtTelefon.getText();
        String regPlats = cmbPlats.getSelectedItem().toString();
        String regAnsAgent = cmbAnsAgent.getSelectedItem().toString();
        try {

            String platsID = idb.fetchSingle("SELECT Plats_ID FROM plats WHERE Benamning = '" + regPlats + "'");
            String regAgentID = idb.fetchSingle("SELECT Agent_ID FROM agent WHERE namn = '" + regAnsAgent + "'");

            idb.update("UPDATE Alien SET Losenord = '" + regLosenord + "' WHERE Alien_ID = '" + idText + "'");
            idb.update("UPDATE Alien SET Namn = '" + regNamn + "' WHERE Alien_ID = '" + idText + "'");
            idb.update("UPDATE Alien SET Telefon = '" + regTelefon + "' WHERE Alien_ID = '" + idText + "'");
            idb.update("UPDATE Alien SET Losenord = '" + regLosenord + "' WHERE Alien_ID = '" + idText + "'");
            idb.update("UPDATE Alien SET Plats = '" + platsID + "' WHERE Alien_ID = '" + idText + "'");
            idb.update("UPDATE Alien SET Ansvarig_Agent = '" + regAgentID + "'WHERE Alien_ID = '" + idText + "'");
        } catch (InfException e) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + e.getMessage());
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnSok;
    private javax.swing.JToggleButton btnSpara;
    private javax.swing.JToggleButton btnTillbaka;
    private javax.swing.JToggleButton btnValjRas;
    private javax.swing.JComboBox<String> cmbAnsAgent;
    private javax.swing.JComboBox<String> cmbOmrade;
    private javax.swing.JComboBox<String> cmbPlats;
    private javax.swing.JComboBox<String> cmbRas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel lblAlienID;
    private javax.swing.JLabel lblAnsvarigAgent;
    private javax.swing.JLabel lblConfirm;
    private javax.swing.JLabel lblLosen;
    private javax.swing.JLabel lblNamn;
    private javax.swing.JLabel lblOmrade;
    private javax.swing.JLabel lblPersInfo;
    private javax.swing.JLabel lblPlats;
    private javax.swing.JLabel lblRas;
    private javax.swing.JLabel lblRasInfo;
    private javax.swing.JLabel lblTelefon;
    private javax.swing.JLabel lblTitel;
    private javax.swing.JMenu menuBarInget;
    private javax.swing.JMenu menuBarInlogg;
    private javax.swing.JMenu menuBarLoggaUt;
    private javax.swing.JMenu menuBarStartsida;
    private javax.swing.JPasswordField pswLosen;
    private javax.swing.JTextField txtAlienID;
    private javax.swing.JTextField txtNamn;
    private javax.swing.JTextField txtRasInfo;
    private javax.swing.JTextField txtTelefon;
    // End of variables declaration//GEN-END:variables
}
