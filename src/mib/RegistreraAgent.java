/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mib;

import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author Linda, Lisa, Josanna
 */
public class RegistreraAgent extends javax.swing.JFrame {

    private InfDB idb;
    private String anvId;
    private String anvTyp;
    private String regAgentID;

    /**
     * Creates new form RegistreraAgent
     */
    public RegistreraAgent(InfDB idb, String anvId, String anvTyp) {
        initComponents();
        this.idb = idb;
        this.anvId = anvId;
        this.anvTyp = anvTyp;
        menuInlogg.setText("Inloggad som " + anvTyp);

        // Anropar en metod som genererar nytt ID automatiskt. 
        //Hämtas i konstruktorn för att visas så fort klassens fönster visas.
        hamtaAgentID(regAgentID);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblRubrik = new javax.swing.JLabel();
        lblAgentID = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        lblNamn = new javax.swing.JLabel();
        lblTelefon = new javax.swing.JLabel();
        lblAdmin = new javax.swing.JLabel();
        cmbAdminSvar = new javax.swing.JComboBox<>();
        lblOmrade = new javax.swing.JLabel();
        cmbOmradeSvar = new javax.swing.JComboBox<>();
        lblAnstDatum = new javax.swing.JLabel();
        lblLosen = new javax.swing.JLabel();
        txtNamnSvar = new javax.swing.JTextField();
        txtTelefonSvar = new javax.swing.JTextField();
        txtAnsDatumSvar = new javax.swing.JTextField();
        txtLosen1 = new javax.swing.JTextField();
        btnReg = new javax.swing.JButton();
        txtLosen2 = new javax.swing.JTextField();
        lblUppdateraLosen = new javax.swing.JLabel();
        btnTillbaka = new javax.swing.JButton();
        lblDatumHjalp = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuStartsida = new javax.swing.JMenu();
        menuInget = new javax.swing.JMenu();
        menuInlogg = new javax.swing.JMenu();
        menuLoggaUt = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblRubrik.setText("AGENTREGISTRERING");

        lblAgentID.setText("Agent-ID:");

        lblID.setText("Autogenererad");

        lblNamn.setText("Namn/Benämning:");

        lblTelefon.setText("Telefon:");

        lblAdmin.setText("Administratör?:");

        cmbAdminSvar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ja", "Nej" }));

        lblOmrade.setText("Område:");

        cmbOmradeSvar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Svealand", "Götaland", "Norrland" }));

        lblAnstDatum.setText("Anställningsdatum:");

        lblLosen.setText("Lösenord:");

        btnReg.setText("Registrera");
        btnReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegActionPerformed(evt);
            }
        });

        lblUppdateraLosen.setText("Uppdatera lösenord");

        btnTillbaka.setText("Gå tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        lblDatumHjalp.setText("ÅÅÅÅ-MM-DD");

        menuStartsida.setText("Tillbaka till startsida");
        menuStartsida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuStartsidaMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuStartsida);

        menuInget.setText("                                                                                                                                                                                   ");
        jMenuBar1.add(menuInget);

        menuInlogg.setText("Inloggad som administratör");
        jMenuBar1.add(menuInlogg);

        menuLoggaUt.setText("Logga ut");
        menuLoggaUt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuLoggaUtMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuLoggaUt);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(btnTillbaka))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(367, 367, 367)
                        .addComponent(btnReg)))
                .addGap(534, 534, 534))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblNamn)
                            .addComponent(lblAgentID)
                            .addComponent(lblAdmin)
                            .addComponent(lblTelefon)
                            .addComponent(lblOmrade)
                            .addComponent(lblAnstDatum)
                            .addComponent(lblLosen)
                            .addComponent(lblUppdateraLosen))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblID, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                            .addComponent(txtNamnSvar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTelefonSvar)
                            .addComponent(cmbAdminSvar, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbOmradeSvar, 0, 87, Short.MAX_VALUE)
                            .addComponent(txtAnsDatumSvar)
                            .addComponent(lblDatumHjalp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtLosen1)
                            .addComponent(txtLosen2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(351, 351, 351)
                        .addComponent(lblRubrik)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblRubrik)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAgentID)
                    .addComponent(lblID))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNamn)
                    .addComponent(txtNamnSvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelefon)
                    .addComponent(txtTelefonSvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAdmin)
                    .addComponent(cmbAdminSvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOmrade)
                    .addComponent(cmbOmradeSvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAnstDatum)
                    .addComponent(txtAnsDatumSvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDatumHjalp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLosen1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLosen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblUppdateraLosen)
                    .addComponent(txtLosen2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(btnReg)
                .addGap(5, 5, 5)
                .addComponent(btnTillbaka)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * När användaren trycker på knappen utförs kontroller på alla fält och den
     * nya agenten registreras om allt är rätt ifyllt
     */
    private void btnRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegActionPerformed
        // Kollar att alla fält och comboboxar har är ifyllda
        // Telefonnummer får dock lämnas tomt
        if (Validering.textFaltHarVarde(txtNamnSvar) && Validering.textFaltHarVarde(txtAnsDatumSvar)
                && Validering.comboHarVarde(cmbAdminSvar) && Validering.comboHarVarde(cmbOmradeSvar)
                && Validering.textFaltHarVarde(txtLosen1) && Validering.textFaltHarVarde(txtLosen2)) {

            SQL s = new SQL(idb);
            // Kollar så att agentnamnet inte redan finns, metoden hämtas från SQL-klassen
            if (s.namnFinnsInteAgent(txtNamnSvar)) {

                // Hämtar alla användarinmatningar
                String agentID = lblID.getText();
                String regNamn = txtNamnSvar.getText();
                String regTel = txtTelefonSvar.getText();
                String regAdmin = cmbAdminSvar.getSelectedItem().toString();
                String regOmrade = cmbOmradeSvar.getSelectedItem().toString();
                String regDatum = txtAnsDatumSvar.getText();
                String regLosen1 = txtLosen1.getText();
                String regLosen2 = txtLosen2.getText();

                // Kollar så att eventuellt telefonnummer är rätt ifyllt 
                // Godkänt innehåll är null eller att numret består av siffror och ev. "-"
                if (regTel.isEmpty() || Validering.kollaTelefon(regTel)) {

                    // Kollar att datumet är ifyllt i rätt format så att det går att lägga in i databasen
                    if (Validering.kollaDatumFormat(regDatum)) {

                        // Kollar att lösenord och lösenordskontroll matchar med varandra
                        if (regLosen1.equals(regLosen2)) {
                            // Kollar att lösenordet har rätt längd
                            if (regLosen1.length() <= 6 && regLosen1.length() >= 3) {

                                // Kollar om agenten ska vara admin eller inte
                                if (regAdmin.contains("Ja")) {
                                    regAdmin = "J";
                                } else if (regAdmin.contains("Nej")) {
                                    regAdmin = "N";
                                }
                                try {
                                    // Hämtar ID för området som agenten ska tillhöra
                                    String omradesID = idb.fetchSingle("SELECT Omrades_ID FROM omrade WHERE Benamning = '" + regOmrade + "'");
                                    // Lägger till den nya agenten i tabellen Agent och visar bekräftelse för användaren
                                    idb.insert("INSERT INTO Agent VALUES ('" + agentID + "', '" + regNamn + "', '" + regTel + "', '" + regDatum + "', '" + regAdmin + "','" + regLosen1 + "','" + omradesID + "')");
                                    JOptionPane.showMessageDialog(null, "En ny agent har registrerats!");
                                    // Användaren skickas automatiskt tillbaka till föregående sida när en ny agent har registrerats
                                    btnTillbakaActionPerformed(evt);

                                } catch (InfException e) {  // Fångar upp fel vid registrering i databasen och meddelar användaren
                                    JOptionPane.showMessageDialog(null, "Något gick fel! Kontrollera att alla fält har korrekta värden.");
                                    System.out.println("Internt felmeddelande" + e.getMessage());
                                }
                            } else { // fångar upp för kort/långt lösenord och meddelar användaren
                                JOptionPane.showMessageDialog(null, "Lösenordet ska ha minst 3 tecken och som mest 6!");
                            }
                        } else { // fångar upp om lösenord och lösenordkontroll inte matchar och meddelar användaren
                            JOptionPane.showMessageDialog(null, "Lösenorden stämmer inte överens!");
                        }
                    }
                }
            }
        } else {  // Fångar upp om valideringen inte godkänns vad gäller vilka fält som måste vara ifyllda för att agenten ska kunna registreras
            JOptionPane.showMessageDialog(null, "Alla fält måste vara ifyllda!");
        }

    }//GEN-LAST:event_btnRegActionPerformed

    /**
     * Gå tillbaka till föregående sida
     */
    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        setVisible(false);
        AdminHanteraAgenter hantera = new AdminHanteraAgenter(idb, anvId, anvTyp);
        hantera.setVisible(true);
    }//GEN-LAST:event_btnTillbakaActionPerformed

    /**
     * Gå till startsida för administratörer
     */
    private void menuStartsidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuStartsidaMouseClicked
        setVisible(false);
        StartsidaAdmin startAdm = new StartsidaAdmin(idb, anvId, anvTyp);
        startAdm.setVisible(true);
    }//GEN-LAST:event_menuStartsidaMouseClicked

    /**
     * Logga ut och gå tillbaka till inloggningssidan
     */
    private void menuLoggaUtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuLoggaUtMouseClicked
        setVisible(false);
        Inloggning inlogg = new Inloggning(idb);
        inlogg.setVisible(true);
    }//GEN-LAST:event_menuLoggaUtMouseClicked

    /**
     * Hämta vilket ID som det nya agenten ska få
     *
     * @param regAgentID
     */
    private void hamtaAgentID(String regAgentID) {

        try {
            regAgentID = idb.getAutoIncrement("Agent", "Agent_ID");
            lblID.setText(regAgentID);

        } catch (InfException e) {  // Fångar upp om databasfrågan inte lyckades
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReg;
    private javax.swing.JButton btnTillbaka;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cmbAdminSvar;
    private javax.swing.JComboBox<String> cmbOmradeSvar;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel lblAdmin;
    private javax.swing.JLabel lblAgentID;
    private javax.swing.JLabel lblAnstDatum;
    private javax.swing.JLabel lblDatumHjalp;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblLosen;
    private javax.swing.JLabel lblNamn;
    private javax.swing.JLabel lblOmrade;
    private javax.swing.JLabel lblRubrik;
    private javax.swing.JLabel lblTelefon;
    private javax.swing.JLabel lblUppdateraLosen;
    private javax.swing.JMenu menuInget;
    private javax.swing.JMenu menuInlogg;
    private javax.swing.JMenu menuLoggaUt;
    private javax.swing.JMenu menuStartsida;
    private javax.swing.JTextField txtAnsDatumSvar;
    private javax.swing.JTextField txtLosen1;
    private javax.swing.JTextField txtLosen2;
    private javax.swing.JTextField txtNamnSvar;
    private javax.swing.JTextField txtTelefonSvar;
    // End of variables declaration//GEN-END:variables
}
