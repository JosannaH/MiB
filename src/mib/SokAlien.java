/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mib;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author luna
 */
public class SokAlien extends javax.swing.JFrame {

    //Vi skapar 3 Array Lists för att lagra de tre olika rasalternativen i.
    private InfDB idb;
    private String anvId;
    private String anvTyp;
    ArrayList<String> squidLista;
    ArrayList<String> bogloditeLista;
    ArrayList<String> wormLista;

    //I konstruktorn anger vi att de rasunika fälten ska vara osynliga som default.
    public SokAlien(InfDB idb, String anvId, String anvTyp) {
        initComponents();
        this.idb = idb;
        this.anvId = anvId;
        this.anvTyp = anvTyp;
        // Labels ska visas beroende på vilken ras den valda alien har
        lblAntalArmar.setVisible(false);
        lblAntalArmarSvar.setVisible(false);
        // Labels visar användaren om sökning lyckats eller ej
        lblConfirm.setVisible(false);
        lblError.setVisible(false);
        // Hämtar alla alien och lägger till i combobox
        SQL s = new SQL(idb);
        s.alien(cmbNamn);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitel = new javax.swing.JLabel();
        lblNamn = new javax.swing.JLabel();
        lblLosen = new javax.swing.JLabel();
        lblAlienID = new javax.swing.JLabel();
        lblAlienLosenord = new javax.swing.JLabel();
        lblTelefon = new javax.swing.JLabel();
        lblAlienTelefon = new javax.swing.JLabel();
        lblRas = new javax.swing.JLabel();
        lblPlats = new javax.swing.JLabel();
        lblAgent = new javax.swing.JLabel();
        btnSok = new javax.swing.JButton();
        lblAlienRas = new javax.swing.JLabel();
        lblAlienPlats = new javax.swing.JLabel();
        lblAnsvarigAgent = new javax.swing.JLabel();
        lblAntalArmar = new javax.swing.JLabel();
        lblAntalArmarSvar = new javax.swing.JLabel();
        lblConfirm = new javax.swing.JLabel();
        lblError = new javax.swing.JLabel();
        btnTillbaka = new javax.swing.JToggleButton();
        lblDatumlbl = new javax.swing.JLabel();
        lblDatum = new javax.swing.JLabel();
        cmbNamn = new javax.swing.JComboBox<>();
        lblID = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuStartsida = new javax.swing.JMenu();
        menuInget = new javax.swing.JMenu();
        menuLoggaUt = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitel.setFont(new java.awt.Font("Hiragino Maru Gothic ProN", 0, 24)); // NOI18N
        lblTitel.setText("MiB ALIENSÖK");

        lblNamn.setText("Namn");

        lblLosen.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        lblLosen.setText("Lösenord:");
        lblLosen.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblAlienID.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        lblAlienID.setText("ID");
        lblAlienID.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblAlienLosenord.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        lblAlienLosenord.setText("**********");

        lblTelefon.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        lblTelefon.setText("Telefon:");
        lblTelefon.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblAlienTelefon.setText("-");

        lblRas.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        lblRas.setText("Ras:");
        lblRas.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblPlats.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        lblPlats.setText("Plats:");
        lblPlats.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblAgent.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        lblAgent.setText("Ansvarig agent:");
        lblAgent.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnSok.setText("SÖK");
        btnSok.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSokMouseClicked(evt);
            }
        });

        lblAlienRas.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        lblAlienRas.setText("-");

        lblAlienPlats.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        lblAlienPlats.setText("-");

        lblAnsvarigAgent.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        lblAnsvarigAgent.setText("-");

        lblAntalArmar.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        lblAntalArmar.setText("Antal Armar:");
        lblAntalArmar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblAntalArmarSvar.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        lblAntalArmarSvar.setText("-");

        lblConfirm.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        lblConfirm.setForeground(new java.awt.Color(0, 255, 0));
        lblConfirm.setText("Sökningen lyckades. Förvärvad information om den aktuella livsformen:");

        lblError.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        lblError.setForeground(new java.awt.Color(255, 0, 0));
        lblError.setText("Sökningen misslyckades. Kontakta MiB Service Support.");

        btnTillbaka.setText("Gå tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        lblDatumlbl.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        lblDatumlbl.setText("Registreringsdatum");
        lblDatumlbl.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblDatum.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        lblDatum.setText("-");

        lblID.setText("-");

        menuStartsida.setText("Tillbaka till startsida");
        menuStartsida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuStartsidaMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuStartsida);

        menuInget.setText("                                                                                                                                                                                               ");
        jMenuBar1.add(menuInget);

        menuLoggaUt.setText("Logga ut");
        menuLoggaUt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuLoggaUtMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuLoggaUt);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(btnTillbaka)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(lblError))
                    .addComponent(lblConfirm))
                .addGap(262, 262, 262))
            .addGroup(layout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblAlienID)
                        .addGap(18, 18, 18)
                        .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTelefon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblAlienTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPlats)
                            .addComponent(lblLosen)
                            .addComponent(lblAgent)
                            .addComponent(lblRas)
                            .addComponent(lblAntalArmar)
                            .addComponent(lblDatumlbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAntalArmarSvar)
                            .addComponent(lblAlienLosenord, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAlienPlats)
                            .addComponent(lblAnsvarigAgent)
                            .addComponent(lblAlienRas)
                            .addComponent(lblDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblNamn)
                        .addGap(18, 18, 18)
                        .addComponent(cmbNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSok)
                        .addGap(298, 298, 298))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblTitel)
                        .addGap(324, 324, 324))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(lblTitel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNamn)
                    .addComponent(btnSok)
                    .addComponent(cmbNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblConfirm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAlienID)
                    .addComponent(lblID))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelefon)
                    .addComponent(lblAlienTelefon))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLosen)
                    .addComponent(lblAlienLosenord))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPlats)
                    .addComponent(lblAlienPlats))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAgent)
                    .addComponent(lblAnsvarigAgent))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRas)
                    .addComponent(lblAlienRas))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAntalArmar)
                    .addComponent(lblAntalArmarSvar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDatumlbl)
                    .addComponent(lblDatum))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnTillbaka)
                    .addComponent(lblError))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
     * Gå tillbaka till föregående sida, olika beroende på om anv är agent eller
     * admin
     *
     * @param evt
     */
    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        SQL s = new SQL(idb);
        boolean admin = s.arAdmin(anvId);
        setVisible(false);

        if (admin) {
            HanteraAliensAdmin h = new HanteraAliensAdmin(idb, anvId, anvTyp);
            h.setVisible(true);
        } else {
            HanteraAliens h = new HanteraAliens(idb, anvId, anvTyp);
            h.setVisible(true);
        }
    }//GEN-LAST:event_btnTillbakaActionPerformed
    /**
     * Gå till startsida, metod anropas som skickar anv till olika sidor
     * beroende på om den är agent eller admin
     */
    private void menuStartsidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuStartsidaMouseClicked
        setVisible(false);
        SQL s = new SQL(idb);
        s.tillStartsida(anvId, anvTyp);
    }//GEN-LAST:event_menuStartsidaMouseClicked
    /**
     * Logga ut och gå till inloggningsida
     */
    private void menuLoggaUtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuLoggaUtMouseClicked
        setVisible(false);
        Inloggning inlogg = new Inloggning(idb);
        inlogg.setVisible(true);
    }//GEN-LAST:event_menuLoggaUtMouseClicked
    /**
     * Sök efter vald alien
     */
    private void btnSokMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSokMouseClicked
        // gömmer labels inför ny sökning
        lblConfirm.setVisible(false);
        lblError.setVisible(false);

        try {
            // Hämta användarens val
            String namn = cmbNamn.getSelectedItem().toString();

            //Hämta ID för alien som användaren sökt efter
            String soktID = idb.fetchSingle("SELECT alien_ID FROM alien WHERE namn = '" + namn + "'");
            // Spara alla alienID i en lista
            ArrayList<String> alienLista = idb.fetchColumn("SELECT alien_ID FROM alien");
            // Kolla om alienID existerar i databas

            // Hämta alla aliens i olika raser och spara i separata listor
            squidLista = idb.fetchColumn("SELECT Alien_ID FROM squid ORDER BY Alien_ID");
            bogloditeLista = idb.fetchColumn("SELECT Alien_ID FROM boglodite ORDER BY Alien_ID");
            wormLista = idb.fetchColumn("SELECT Alien_ID FROM worm ORDER BY Alien_ID");

            //Nästlad SQL-fråga för att kunna visa namnet på agenten i stället för dess AgentID.
            String alienAgentNamn = idb.fetchSingle("SELECT Namn FROM Agent WHERE Agent_ID IN (SELECT Ansvarig_Agent FROM Alien where Alien_ID = " + soktID + ")");

            //Nästlad SQL-fråga för att kunna visa namnet på platsen istället för platsID.
            String alienPlats = idb.fetchSingle("SELECT Benamning FROM Plats WHERE Plats_ID IN(SELECT Plats from Alien where Alien_ID =" + soktID + ")");

            //SQL-frågor som hämtar aliens lösenord, telefon och reg.datum från databasen.
            String alienLosenord = idb.fetchSingle("SELECT Losenord FROM Alien where Alien_ID = " + soktID + "");
            String alienTelefon = idb.fetchSingle("SELECT Telefon FROM Alien where Alien_ID = " + soktID + "");
            String datum = idb.fetchSingle("SELECT Registreringsdatum FROM alien WHERE Alien_ID = " + soktID + "");

            //Här anger vi vad vi vill ska stå i våra labels, det vill säga informationen om den eftersökta alien.
            lblAlienLosenord.setText(alienLosenord);
            lblID.setText(soktID);
            lblAlienTelefon.setText(alienTelefon);
            lblAlienPlats.setText(alienPlats);
            lblAnsvarigAgent.setText(alienAgentNamn);
            lblDatum.setText(datum);

            //Här arbetr vi med villkorssatser för att "söka" efter det eftersökta ID:t i våra Arrayer för dom olika raserna
            if (squidLista.contains(soktID)) {
                String antalArmar = idb.fetchSingle("SELECT Antal_Armar FROM squid WHERE Alien_ID = '" + soktID + "'");
                lblAlienRas.setText("Squid");
                // resspecifik info visas
                lblAntalArmar.setText("Antal armar:");
                lblAntalArmar.setVisible(true);
                lblAntalArmarSvar.setVisible(true);
                lblAntalArmarSvar.setText(antalArmar);
                // bekräftelse till användaren att sökning lyckats
                lblConfirm.setVisible(true);

            } else if (bogloditeLista.contains(soktID)) {
                String antalBoogies = idb.fetchSingle("SELECT Antal_Boogies FROM boglodite WHERE Alien_ID = '" + soktID + "'");
                lblAlienRas.setText("Boglodite");

                lblAntalArmar.setText("Antal boogies:");
                lblAntalArmarSvar.setText(antalBoogies);
                lblAntalArmar.setVisible(true);
                lblAntalArmarSvar.setVisible(true);
                lblConfirm.setVisible(true);
            } else if (wormLista.contains(soktID)) {
                lblAlienRas.setText("Worm");
                lblAntalArmar.setVisible(false);
                lblAntalArmarSvar.setVisible(false);
                lblConfirm.setVisible(true);
                // Worm har inga rasspecifika egenskaper

            } else {
                // om en alien finns i tabellen Alien, men inte i någon av raslistorna så är den av okänd ras.
                lblAlienRas.setText("Okänd");
                lblAntalArmar.setVisible(false);
                lblAntalArmarSvar.setVisible(false);
                lblConfirm.setVisible(true);
            }
        } catch (InfException e) { // Fångar upp fel i databasfrågorna
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            lblError.setVisible(true);
            System.out.println("Internt felmeddelande:" + e.getMessage());
        }
    }//GEN-LAST:event_btnSokMouseClicked

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSok;
    private javax.swing.JToggleButton btnTillbaka;
    private javax.swing.JComboBox<String> cmbNamn;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel lblAgent;
    private javax.swing.JLabel lblAlienID;
    private javax.swing.JLabel lblAlienLosenord;
    private javax.swing.JLabel lblAlienPlats;
    private javax.swing.JLabel lblAlienRas;
    private javax.swing.JLabel lblAlienTelefon;
    private javax.swing.JLabel lblAnsvarigAgent;
    private javax.swing.JLabel lblAntalArmar;
    private javax.swing.JLabel lblAntalArmarSvar;
    private javax.swing.JLabel lblConfirm;
    private javax.swing.JLabel lblDatum;
    private javax.swing.JLabel lblDatumlbl;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblLosen;
    private javax.swing.JLabel lblNamn;
    private javax.swing.JLabel lblPlats;
    private javax.swing.JLabel lblRas;
    private javax.swing.JLabel lblTelefon;
    private javax.swing.JLabel lblTitel;
    private javax.swing.JMenu menuInget;
    private javax.swing.JMenu menuLoggaUt;
    private javax.swing.JMenu menuStartsida;
    // End of variables declaration//GEN-END:variables
}
