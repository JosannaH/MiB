/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mib;

import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author Josanna, Linda & Lisa
 */
public class UppdateraUtrustning extends javax.swing.JFrame {

    private InfDB idb;
    private String anvId;
    private String anvTyp;
    ArrayList<String> vapenLista;
    ArrayList<String> kommunikationsLista;
    ArrayList<String> teknikLista;

    public UppdateraUtrustning(InfDB idb, String anvId, String anvTyp) {
        initComponents();
        this.idb = idb;
        this.anvId = anvId;
        this.anvTyp = anvTyp;

        // Anropas för att dölja nedanstående rader tills dess att man har valt ras.
        doljText(txtEgenskapInfo);
        doljLabel(lblEgenskap);
        
        try{
        
                vapenLista = idb.fetchColumn("SELECT Utrustnings_ID FROM Vapen ORDER BY Utrustnings_ID");
                kommunikationsLista = idb.fetchColumn("SELECT Utrustnings_ID FROM Kommunikation ORDER BY Utrustnings_ID");
                teknikLista = idb.fetchColumn("SELECT Utrustnings_ID FROM Teknik ORDER BY Utrustnings_ID");
        }
        catch (InfException e) {
                JOptionPane.showMessageDialog(null, "Något gick fel!");
                System.out.println("Internt felmeddelande" + e.getMessage());
            }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitel = new javax.swing.JLabel();
        txtNamn = new javax.swing.JTextField();
        lblNamn = new javax.swing.JLabel();
        lblTelefon = new javax.swing.JLabel();
        cmbUtrustningsTyp = new javax.swing.JComboBox<>();
        lblConfirm = new javax.swing.JLabel();
        lblRubrik = new javax.swing.JLabel();
        lblPersInfo = new javax.swing.JLabel();
        lblUtrustningsID = new javax.swing.JLabel();
        txtEgenskapInfo = new javax.swing.JTextField();
        lblEgenskap = new javax.swing.JLabel();
        btnValjTyp = new javax.swing.JToggleButton();
        txtUtrustningID = new javax.swing.JTextField();
        btnSok = new javax.swing.JToggleButton();
        btnSpara = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        btnTillbaka = new javax.swing.JToggleButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuBarStartsida = new javax.swing.JMenu();
        menuBarInget = new javax.swing.JMenu();
        menuBarInlogg = new javax.swing.JMenu();
        menuBarLoggaUt = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblTitel.setText("Uppdatera utrustning");

        lblNamn.setText("Namn");

        lblTelefon.setText("Utrustningstyp");

        cmbUtrustningsTyp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vapen", "Kommunikation", "Teknik", "Okänd" }));

        lblConfirm.setForeground(new java.awt.Color(0, 204, 0));

        lblRubrik.setFont(new java.awt.Font("Hiragino Maru Gothic ProN", 0, 24)); // NOI18N
        lblRubrik.setText("MiB REGISTRERINGSSERVICE");

        lblUtrustningsID.setText("UtrustningsID");

        lblEgenskap.setText("Egenskap");

        btnValjTyp.setText("Välj typ");
        btnValjTyp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnValjTypMouseClicked(evt);
            }
        });

        btnSok.setText("Sök");
        btnSok.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSokMouseClicked(evt);
            }
        });
        btnSok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSokActionPerformed(evt);
            }
        });

        btnSpara.setText("Spara ändringar");
        btnSpara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSparaActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Media/UtrustningAgent.png"))); // NOI18N

        btnTillbaka.setText("Gå tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        menuBarStartsida.setText("Gå till startsida");
        menuBarStartsida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuBarStartsidaMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuBarStartsida);

        menuBarInget.setText("                                                                                                                ");
        jMenuBar1.add(menuBarInget);

        menuBarInlogg.setText("Inloggad som Administratör");
        jMenuBar1.add(menuBarInlogg);

        menuBarLoggaUt.setText("Logga ut");
        menuBarLoggaUt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuBarLoggaUtMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuBarLoggaUt);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(lblRubrik))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(295, 295, 295)
                        .addComponent(lblTitel)))
                .addGap(0, 185, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblConfirm)
                            .addComponent(lblPersInfo)
                            .addComponent(btnTillbaka)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEgenskap)
                            .addComponent(lblTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNamn)
                            .addComponent(lblUtrustningsID))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtUtrustningID, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSok))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSpara)
                                    .addComponent(cmbUtrustningsTyp, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnValjTyp)
                                    .addComponent(txtEgenskapInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(47, 47, 47)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblRubrik)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTitel)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lblPersInfo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtUtrustningID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSok)
                                    .addComponent(lblUtrustningsID))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblTelefon)
                                    .addComponent(cmbUtrustningsTyp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(btnValjTyp)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtEgenskapInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblEgenskap))
                                .addGap(20, 20, 20)
                                .addComponent(btnSpara))
                            .addComponent(jLabel1))
                        .addGap(0, 85, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTillbaka)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(lblConfirm)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /* Metoden döljer en ruta som lagrar information tillhörande specifik utrustning. metoden anropas direkt i konstruktorn
    för att inledningsvis döljas. */
    private void doljText(JTextField textAttDolja) {
        textAttDolja.setVisible(false);
    }

    /* Metoden döljer en rubrik som lagrar information tillhörande specifik utrustning. metoden anropas direkt i konstruktorn
    för att inledningsvis döljas. */
    private void doljLabel(JLabel lablAttDolja) {
        lablAttDolja.setVisible(false);
    }

    // Varje ras har egen information som behöver lagras. Detta görs genom knappen välj. Beroende på ras så ska olik information visas.
    private void btnValjTypMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnValjTypMouseClicked
         String typ = cmbUtrustningsTyp.getSelectedItem().toString();

        /* Beroende på vilken utrustning så ska olika saker ske. Viss utrustning har fler uppgifter som behöver hämtas in. 
        Dessa görs synliga beroende på vilken typ av utrustning man har valt. */
        if (typ.equals("Vapen")) {
            txtEgenskapInfo.setVisible(true);
            lblEgenskap.setVisible(true);
            lblEgenskap.setText("Kaliber");
        } else if (typ.equals("Kommunikation")) {
            txtEgenskapInfo.setVisible(true);
            lblEgenskap.setVisible(true);
            lblEgenskap.setText("Överföringsteknik");
        } else if (typ.equals("Teknik")) {
            txtEgenskapInfo.setVisible(true);
            lblEgenskap.setVisible(true);
            lblEgenskap.setText("Kraftkälla");
        } else {
            doljText(txtEgenskapInfo);
            doljLabel(lblEgenskap);
        }
    }//GEN-LAST:event_btnValjTypMouseClicked

    // Metoden söker upp information om det alienID man har angett.
    private void btnSokMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSokMouseClicked

        // Kontrollerar att fältet för alienID är ifyllt.
        if (Validering.textFaltHarVarde(txtUtrustningID)) {
            String idText = txtUtrustningID.getText();

            try {

                // Koden nedan hämtar information baserat på det ID man har angett.
                txtUtrustningID.setText(idText);

               
                String namn = idb.fetchSingle("SELECT Benamning FROM Utrustning WHERE Utrustnings_ID ='" + idText + "'");
                txtNamn.setText(namn);
                
                
                // Nedan använder man ArrayList för att hämta information kopplat till den ras som alienID är kopplat till.
                if (vapenLista.contains(idText)) {
                    cmbUtrustningsTyp.setSelectedItem("Vapen");

                    String kaliber = idb.fetchSingle("SELECT Kaliber FROM Vapen WHERE Utrustnings_ID = '" + idText + "'");
                    txtEgenskapInfo.setText(kaliber);
                    txtEgenskapInfo.setVisible(true);

                    lblEgenskap.setVisible(true);
                    lblEgenskap.setText("Kaliber");
                } else if (kommunikationsLista.contains(idText)) {
                    cmbUtrustningsTyp.setSelectedItem("Kommunikation");

                    String overforingsTeknik = idb.fetchSingle("SELECT Overforingsteknik FROM Kommunikation WHERE Utrustnings_ID = '" + idText + "'");
                    txtEgenskapInfo.setText(overforingsTeknik);
                    txtEgenskapInfo.setVisible(true);

                    lblEgenskap.setVisible(true);
                    lblEgenskap.setText("Överföringsteknik");
                } else if (teknikLista.contains(idText)) {
                    cmbUtrustningsTyp.setSelectedItem("Teknik");
                    
                    String kraftKalla = idb.fetchSingle("SELECT Kraftkalla FROM Teknik WHERE Utrustnings_ID = '" + idText + "'");
                    txtEgenskapInfo.setText(kraftKalla);
                    txtEgenskapInfo.setVisible(true);

                    lblEgenskap.setVisible(true);
                    lblEgenskap.setText("Kraftkälla");
                } else {
                    cmbUtrustningsTyp.setSelectedItem("Okänd");
                }

            } catch (InfException e) {
                JOptionPane.showMessageDialog(null, "Något gick fel!");
                System.out.println("Internt felmeddelande" + e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "UtrustningsID måste vara ifyllt!");
        }
    }//GEN-LAST:event_btnSokMouseClicked

    // Metoden lägger till den information man har uppdaterat om valt alienID.
    private void btnSparaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSparaActionPerformed

        // Kontrollerar att viktiga fält är ifyllda innan man kan lagra ny information.
        if (Validering.textFaltHarVarde(txtUtrustningID) && Validering.textFaltHarVarde(txtNamn)) {

            String regUtrustningsID = txtUtrustningID.getText();
            String regUtrustning = cmbUtrustningsTyp.getSelectedItem().toString();
            String regEgenskap = txtEgenskapInfo.getText();
            String regNamn = txtNamn.getText();
                
            
            try {
               
                 // Kontrollerar att man har fyllt i tillhörande information (egenskap) om valt vapen. 
                if (regUtrustning.equals("Vapen") && Validering.textFaltHarVarde(txtEgenskapInfo)) {
                    laggTill();
                    if(vapenLista.contains(regUtrustningsID)){
                        idb.update("UPDATE Vapen SET Kaliber = '" + regEgenskap + "' WHERE Utrustnings_ID = '" + regUtrustningsID + "'");
                    }
                    else{
                    idb.insert("INSERT INTO Vapen VALUES ('" + regUtrustningsID + "', '" + regEgenskap + "')");
                    if(kommunikationsLista.contains(regUtrustningsID)){
                        idb.delete("DELETE FROM Kommunikation WHERE Utrustnings_ID = '" + regUtrustningsID + "'");
                    }
                    if(teknikLista.contains(regUtrustningsID)){
                        idb.delete("DELETE FROM Teknik WHERE Utrustnings_ID = '" + regUtrustningsID + "'");
                    }
                }
                }
                else if (regUtrustning.equals("Kommunikation") && Validering.textFaltHarVarde(txtEgenskapInfo)) {
                    laggTill();
                    if(kommunikationsLista.contains(regUtrustningsID)){
                        idb.update("UPDATE Kommunikation SET Overforingsteknik = '" + regEgenskap + "' WHERE Utrustnings_ID = '" + regUtrustningsID + "'");
                    }
                    else{
                    idb.insert("INSERT INTO Kommunikation VALUES ('" + regUtrustningsID + "', '" + regEgenskap + "')");
                    
                    if(vapenLista.contains(regUtrustningsID)){
                        idb.delete("DELETE FROM Vapen WHERE Utrustnings_ID = '" + regUtrustningsID + "'");
                    }
                    if(teknikLista.contains(regUtrustningsID)){
                        idb.delete("DELETE FROM Teknik WHERE Utrustnings_ID = '" + regUtrustningsID + "'");
                    }
                    }
                } else if (regUtrustning.equals("Teknik") && Validering.textFaltHarVarde(txtEgenskapInfo)) {
                    laggTill();
                    if(teknikLista.contains(regUtrustningsID)){
                        idb.update("UPDATE Teknik SET Kraftkalla = '" + regEgenskap + "' WHERE Utrustnings_ID = '" + regUtrustningsID + "'");
                    }
                    else{
                    idb.insert("INSERT INTO Teknik VALUES ('" + regUtrustningsID + "', '" + regEgenskap + "')");
                    if(vapenLista.contains(regUtrustningsID)){
                        idb.delete("DELETE FROM Vapen WHERE Utrustnings_ID = '" + regUtrustningsID + "'");
                    }
                    if(kommunikationsLista.contains(regUtrustningsID)){
                        idb.delete("DELETE FROM Kommunikation WHERE Utrustnings_ID = '" + regUtrustningsID + "'");
                    }
                    if(teknikLista.contains(regUtrustningsID)){
                        idb.delete("DELETE FROM Teknik WHERE Utrustnings_ID = '" + regUtrustningsID + "'");
                    }
                    }
                } else if (regUtrustning.equals("Okänd")) {
                    laggTill();
                }else {
                    JOptionPane.showMessageDialog(null, "Alla fält måste vara ifyllda!");
                }

                JOptionPane.showMessageDialog(null, "Uppdateringen lyckades!");

            } catch (InfException e) {
                JOptionPane.showMessageDialog(null, "Något gick fel!");
                System.out.println("Internt felmeddelande" + e.getMessage());
            }
            

        } else {
            JOptionPane.showMessageDialog(null, "Alla fält måste vara ifyllda!");
        }


    }//GEN-LAST:event_btnSparaActionPerformed

    // Metoden gör nuvarande fönster osynligt och öppnar klassen StartsidaAgent i nytt fönster.
    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        setVisible(false);
        HanteraAliens hanteraAliens = new HanteraAliens(idb, anvId, anvTyp);
        hanteraAliens.setVisible(true);
    }//GEN-LAST:event_btnTillbakaActionPerformed

    // Metoden gör nuvarande fönster osynligt och öppnar klassen StartsidaAgent i nytt fönster.
    private void menuBarStartsidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuBarStartsidaMouseClicked
        setVisible(false);
        StartsidaAgent startsidaAgent = new StartsidaAgent(idb, anvId, anvTyp);
        startsidaAgent.setVisible(true);
    }//GEN-LAST:event_menuBarStartsidaMouseClicked

    //Metoden gör nuvarande fönster osynligt och öppnar klassen Inloggning i nytt fönster. Denna metod gör så att man blir utloggad.
    private void menuBarLoggaUtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuBarLoggaUtMouseClicked
        setVisible(false);
        Inloggning inlogg = new Inloggning(idb);
        inlogg.setVisible(true);
    }//GEN-LAST:event_menuBarLoggaUtMouseClicked

    private void btnSokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSokActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSokActionPerformed

    private void laggTill() {
        String regBenamning = txtNamn.getText();
        String regUtrustningsID = lblUtrustningsID.getText();
        try {

            idb.insert("INSERT INTO Utrustning VALUES ('" + regUtrustningsID + "', '" + regBenamning + "')");
            JOptionPane.showMessageDialog(null, "Ny utrustning är nu registrerad!");
        } catch (InfException e) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + e.getMessage());
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnSok;
    private javax.swing.JToggleButton btnSpara;
    private javax.swing.JToggleButton btnTillbaka;
    private javax.swing.JToggleButton btnValjTyp;
    private javax.swing.JComboBox<String> cmbUtrustningsTyp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel lblConfirm;
    private javax.swing.JLabel lblEgenskap;
    private javax.swing.JLabel lblNamn;
    private javax.swing.JLabel lblPersInfo;
    private javax.swing.JLabel lblRubrik;
    private javax.swing.JLabel lblTelefon;
    private javax.swing.JLabel lblTitel;
    private javax.swing.JLabel lblUtrustningsID;
    private javax.swing.JMenu menuBarInget;
    private javax.swing.JMenu menuBarInlogg;
    private javax.swing.JMenu menuBarLoggaUt;
    private javax.swing.JMenu menuBarStartsida;
    private javax.swing.JTextField txtEgenskapInfo;
    private javax.swing.JTextField txtNamn;
    private javax.swing.JTextField txtUtrustningID;
    // End of variables declaration//GEN-END:variables
}
